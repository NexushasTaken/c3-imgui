// ImDrawFlags_
module imgui::draw_flags;
distinct DrawFlags = uint;
const DrawFlags NONE = 0;
const DrawFlags CLOSED = 1 << 0;
const DrawFlags ROUND_CORNERS_TOP_LEFT = 1 << 4;
const DrawFlags ROUND_CORNERS_TOP_RIGHT = 1 << 5;
const DrawFlags ROUND_CORNERS_BOTTOM_LEFT = 1 << 6;
const DrawFlags ROUND_CORNERS_BOTTOM_RIGHT = 1 << 7;
const DrawFlags ROUND_CORNERS_NONE = 1 << 8;
const DrawFlags ROUND_CORNERS_TOP = ROUND_CORNERS_TOP_LEFT | ROUND_CORNERS_TOP_RIGHT;
const DrawFlags ROUND_CORNERS_BOTTOM = ROUND_CORNERS_BOTTOM_LEFT | ROUND_CORNERS_BOTTOM_RIGHT;
const DrawFlags ROUND_CORNERS_LEFT = ROUND_CORNERS_BOTTOM_LEFT | ROUND_CORNERS_TOP_LEFT;
const DrawFlags ROUND_CORNERS_RIGHT = ROUND_CORNERS_BOTTOM_RIGHT | ROUND_CORNERS_TOP_RIGHT;
const DrawFlags ROUND_CORNERS_ALL = ROUND_CORNERS_TOP_LEFT | ROUND_CORNERS_TOP_RIGHT | ROUND_CORNERS_BOTTOM_LEFT | ROUND_CORNERS_BOTTOM_RIGHT;
const DrawFlags ROUND_CORNERS_DEFAULT = ROUND_CORNERS_ALL;
const DrawFlags ROUND_CORNERS_MASK = ROUND_CORNERS_ALL | ROUND_CORNERS_NONE;

// ImGuiButtonFlags_
module imgui::button_flags;
distinct ButtonFlags = uint;
const ButtonFlags NONE = 0;
const ButtonFlags MOUSE_BUTTON_LEFT = 1 << 0;
const ButtonFlags MOUSE_BUTTON_RIGHT = 1 << 1;
const ButtonFlags MOUSE_BUTTON_MIDDLE = 1 << 2;
const ButtonFlags MOUSE_BUTTON_MASK = MOUSE_BUTTON_LEFT | MOUSE_BUTTON_RIGHT | MOUSE_BUTTON_MIDDLE;

// ImFontAtlasFlags_
module imgui::font_atlas_flags;
distinct FontAtlasFlags = uint;
const FontAtlasFlags NONE = 0;
const FontAtlasFlags NO_POWER_OF_TWO_HEIGHT = 1 << 0;
const FontAtlasFlags NO_MOUSE_CURSORS = 1 << 1;
const FontAtlasFlags NO_BAKED_LINES = 1 << 2;

// ImGuiTableRowFlags_
module imgui::table_row_flags;
distinct TableRowFlags = uint;
const TableRowFlags NONE = 0;
const TableRowFlags HEADERS = 1 << 0;

// ImGuiCond_
module imgui::cond;
distinct Cond = uint;
const Cond NONE = 0;
const Cond ALWAYS = 1 << 0;
const Cond ONCE = 1 << 1;
const Cond FIRST_USE_EVER = 1 << 2;
const Cond APPEARING = 1 << 3;

// ImGuiPopupFlags_
module imgui::popup_flags;
distinct PopupFlags = uint;
const PopupFlags NONE = 0;
const PopupFlags MOUSE_BUTTON_LEFT = 0;
const PopupFlags MOUSE_BUTTON_RIGHT = 1;
const PopupFlags MOUSE_BUTTON_MIDDLE = 2;
const PopupFlags MOUSE_BUTTON_MASK = 0x1F;
const PopupFlags MOUSE_BUTTON_DEFAULT = 1;
const PopupFlags NO_REOPEN = 1 << 5;
const PopupFlags NO_OPEN_OVER_EXISTING_POPUP = 1 << 7;
const PopupFlags NO_OPEN_OVER_ITEMS = 1 << 8;
const PopupFlags ANY_POPUP_ID = 1 << 10;
const PopupFlags ANY_POPUP_LEVEL = 1 << 11;
const PopupFlags ANY_POPUP = ANY_POPUP_ID | ANY_POPUP_LEVEL;

// ImGuiSelectionRequestType
module imgui::selection_request_type;
distinct SelectionRequestType = uint;
const SelectionRequestType NONE = 0;
const SelectionRequestType SET_ALL = 1;
const SelectionRequestType SET_RANGE = 2;

// ImGuiDragDropFlags_
module imgui::drag_drop_flags;
distinct DragDropFlags = uint;
const DragDropFlags NONE = 0;
const DragDropFlags SOURCE_NO_PREVIEW_TOOLTIP = 1 << 0;
const DragDropFlags SOURCE_NO_DISABLE_HOVER = 1 << 1;
const DragDropFlags SOURCE_NO_HOLD_TO_OPEN_OTHERS = 1 << 2;
const DragDropFlags SOURCE_ALLOW_NULL_ID = 1 << 3;
const DragDropFlags SOURCE_EXTERN = 1 << 4;
const DragDropFlags PAYLOAD_AUTO_EXPIRE = 1 << 5;
const DragDropFlags PAYLOAD_NO_CROSS_CONTEXT = 1 << 6;
const DragDropFlags PAYLOAD_NO_CROSS_PROCESS = 1 << 7;
const DragDropFlags ACCEPT_BEFORE_DELIVERY = 1 << 10;
const DragDropFlags ACCEPT_NO_DRAW_DEFAULT_RECT = 1 << 11;
const DragDropFlags ACCEPT_NO_PREVIEW_TOOLTIP = 1 << 12;
const DragDropFlags ACCEPT_PEEK_ONLY = ACCEPT_BEFORE_DELIVERY | ACCEPT_NO_DRAW_DEFAULT_RECT;

// ImGuiBackendFlags_
module imgui::backend_flags;
distinct BackendFlags = uint;
const BackendFlags NONE = 0;
const BackendFlags HAS_GAMEPAD = 1 << 0;
const BackendFlags HAS_MOUSE_CURSORS = 1 << 1;
const BackendFlags HAS_SET_MOUSE_POS = 1 << 2;
const BackendFlags RENDERER_HAS_VTX_OFFSET = 1 << 3;
const BackendFlags PLATFORM_HAS_VIEWPORTS = 1 << 10;
const BackendFlags HAS_MOUSE_HOVERED_VIEWPORT = 1 << 11;
const BackendFlags RENDERER_HAS_VIEWPORTS = 1 << 12;

// ImGuiTableColumnFlags_
module imgui::table_column_flags;
distinct TableColumnFlags = uint;
const TableColumnFlags NONE = 0;
const TableColumnFlags DISABLED = 1 << 0;
const TableColumnFlags DEFAULT_HIDE = 1 << 1;
const TableColumnFlags DEFAULT_SORT = 1 << 2;
const TableColumnFlags WIDTH_STRETCH = 1 << 3;
const TableColumnFlags WIDTH_FIXED = 1 << 4;
const TableColumnFlags NO_RESIZE = 1 << 5;
const TableColumnFlags NO_REORDER = 1 << 6;
const TableColumnFlags NO_HIDE = 1 << 7;
const TableColumnFlags NO_CLIP = 1 << 8;
const TableColumnFlags NO_SORT = 1 << 9;
const TableColumnFlags NO_SORT_ASCENDING = 1 << 10;
const TableColumnFlags NO_SORT_DESCENDING = 1 << 11;
const TableColumnFlags NO_HEADER_LABEL = 1 << 12;
const TableColumnFlags NO_HEADER_WIDTH = 1 << 13;
const TableColumnFlags PREFER_SORT_ASCENDING = 1 << 14;
const TableColumnFlags PREFER_SORT_DESCENDING = 1 << 15;
const TableColumnFlags INDENT_ENABLE = 1 << 16;
const TableColumnFlags INDENT_DISABLE = 1 << 17;
const TableColumnFlags ANGLED_HEADER = 1 << 18;
const TableColumnFlags IS_ENABLED = 1 << 24;
const TableColumnFlags IS_VISIBLE = 1 << 25;
const TableColumnFlags IS_SORTED = 1 << 26;
const TableColumnFlags IS_HOVERED = 1 << 27;
const TableColumnFlags WIDTH_MASK = WIDTH_STRETCH | WIDTH_FIXED;
const TableColumnFlags INDENT_MASK = INDENT_ENABLE | INDENT_DISABLE;
const TableColumnFlags STATUS_MASK = IS_ENABLED | IS_VISIBLE | IS_SORTED | IS_HOVERED;
const TableColumnFlags NO_DIRECT_RESIZE = 1 << 30;

// ImGuiStyleVar_
module imgui::style_var;
distinct StyleVar = uint;
const StyleVar ALPHA = 0;
const StyleVar DISABLED_ALPHA = 1;
const StyleVar WINDOW_PADDING = 2;
const StyleVar WINDOW_ROUNDING = 3;
const StyleVar WINDOW_BORDER_SIZE = 4;
const StyleVar WINDOW_MIN_SIZE = 5;
const StyleVar WINDOW_TITLE_ALIGN = 6;
const StyleVar CHILD_ROUNDING = 7;
const StyleVar CHILD_BORDER_SIZE = 8;
const StyleVar POPUP_ROUNDING = 9;
const StyleVar POPUP_BORDER_SIZE = 10;
const StyleVar FRAME_PADDING = 11;
const StyleVar FRAME_ROUNDING = 12;
const StyleVar FRAME_BORDER_SIZE = 13;
const StyleVar ITEM_SPACING = 14;
const StyleVar ITEM_INNER_SPACING = 15;
const StyleVar INDENT_SPACING = 16;
const StyleVar CELL_PADDING = 17;
const StyleVar SCROLLBAR_SIZE = 18;
const StyleVar SCROLLBAR_ROUNDING = 19;
const StyleVar GRAB_MIN_SIZE = 20;
const StyleVar GRAB_ROUNDING = 21;
const StyleVar TAB_ROUNDING = 22;
const StyleVar TAB_BORDER_SIZE = 23;
const StyleVar TAB_BAR_BORDER_SIZE = 24;
const StyleVar TAB_BAR_OVERLINE_SIZE = 25;
const StyleVar TABLE_ANGLED_HEADERS_ANGLE = 26;
const StyleVar TABLE_ANGLED_HEADERS_TEXT_ALIGN = 27;
const StyleVar BUTTON_TEXT_ALIGN = 28;
const StyleVar SELECTABLE_TEXT_ALIGN = 29;
const StyleVar SEPARATOR_TEXT_BORDER_SIZE = 30;
const StyleVar SEPARATOR_TEXT_ALIGN = 31;
const StyleVar SEPARATOR_TEXT_PADDING = 32;
const StyleVar DOCKING_SEPARATOR_SIZE = 33;
const StyleVar COUNT = 34;

// ImGuiTabBarFlags_
module imgui::tab_bar_flags;
distinct TabBarFlags = uint;
const TabBarFlags NONE = 0;
const TabBarFlags REORDERABLE = 1 << 0;
const TabBarFlags AUTO_SELECT_NEW_TABS = 1 << 1;
const TabBarFlags TAB_LIST_POPUP_BUTTON = 1 << 2;
const TabBarFlags NO_CLOSE_WITH_MIDDLE_MOUSE_BUTTON = 1 << 3;
const TabBarFlags NO_TAB_LIST_SCROLLING_BUTTONS = 1 << 4;
const TabBarFlags NO_TOOLTIP = 1 << 5;
const TabBarFlags DRAW_SELECTED_OVERLINE = 1 << 6;
const TabBarFlags FITTING_POLICY_RESIZE_DOWN = 1 << 7;
const TabBarFlags FITTING_POLICY_SCROLL = 1 << 8;
const TabBarFlags FITTING_POLICY_MASK = FITTING_POLICY_RESIZE_DOWN | FITTING_POLICY_SCROLL;
const TabBarFlags FITTING_POLICY_DEFAULT = FITTING_POLICY_RESIZE_DOWN;

// ImGuiChildFlags_
module imgui::child_flags;
distinct ChildFlags = uint;
const ChildFlags NONE = 0;
const ChildFlags BORDER = 1 << 0;
const ChildFlags ALWAYS_USE_WINDOW_PADDING = 1 << 1;
const ChildFlags RESIZE_X = 1 << 2;
const ChildFlags RESIZE_Y = 1 << 3;
const ChildFlags AUTO_RESIZE_X = 1 << 4;
const ChildFlags AUTO_RESIZE_Y = 1 << 5;
const ChildFlags ALWAYS_AUTO_RESIZE = 1 << 6;
const ChildFlags FRAME_STYLE = 1 << 7;
const ChildFlags NAV_FLATTENED = 1 << 8;

// ImGuiMultiSelectFlags_
module imgui::multi_select_flags;
distinct MultiSelectFlags = uint;
const MultiSelectFlags NONE = 0;
const MultiSelectFlags SINGLE_SELECT = 1 << 0;
const MultiSelectFlags NO_SELECT_ALL = 1 << 1;
const MultiSelectFlags NO_RANGE_SELECT = 1 << 2;
const MultiSelectFlags NO_AUTO_SELECT = 1 << 3;
const MultiSelectFlags NO_AUTO_CLEAR = 1 << 4;
const MultiSelectFlags NO_AUTO_CLEAR_ON_RESELECT = 1 << 5;
const MultiSelectFlags BOX_SELECT1D = 1 << 6;
const MultiSelectFlags BOX_SELECT2D = 1 << 7;
const MultiSelectFlags BOX_SELECT_NO_SCROLL = 1 << 8;
const MultiSelectFlags CLEAR_ON_ESCAPE = 1 << 9;
const MultiSelectFlags CLEAR_ON_CLICK_VOID = 1 << 10;
const MultiSelectFlags SCOPE_WINDOW = 1 << 11;
const MultiSelectFlags SCOPE_RECT = 1 << 12;
const MultiSelectFlags SELECT_ON_CLICK = 1 << 13;
const MultiSelectFlags SELECT_ON_CLICK_RELEASE = 1 << 14;
const MultiSelectFlags NAV_WRAP_X = 1 << 16;

// ImGuiSelectableFlags_
module imgui::selectable_flags;
distinct SelectableFlags = uint;
const SelectableFlags NONE = 0;
const SelectableFlags NO_AUTO_CLOSE_POPUPS = 1 << 0;
const SelectableFlags SPAN_ALL_COLUMNS = 1 << 1;
const SelectableFlags ALLOW_DOUBLE_CLICK = 1 << 2;
const SelectableFlags DISABLED = 1 << 3;
const SelectableFlags ALLOW_OVERLAP = 1 << 4;
const SelectableFlags HIGHLIGHT = 1 << 5;

// ImGuiDir
module imgui::dir;
distinct Dir = int;
const Dir NONE = -1;
const Dir LEFT = 0;
const Dir RIGHT = 1;
const Dir UP = 2;
const Dir DOWN = 3;
const Dir COUNT = 4;

// ImGuiTableFlags_
module imgui::table_flags;
distinct TableFlags = uint;
const TableFlags NONE = 0;
const TableFlags RESIZABLE = 1 << 0;
const TableFlags REORDERABLE = 1 << 1;
const TableFlags HIDEABLE = 1 << 2;
const TableFlags SORTABLE = 1 << 3;
const TableFlags NO_SAVED_SETTINGS = 1 << 4;
const TableFlags CONTEXT_MENU_IN_BODY = 1 << 5;
const TableFlags ROW_BG = 1 << 6;
const TableFlags BORDERS_INNER_H = 1 << 7;
const TableFlags BORDERS_OUTER_H = 1 << 8;
const TableFlags BORDERS_INNER_V = 1 << 9;
const TableFlags BORDERS_OUTER_V = 1 << 10;
const TableFlags BORDERS_H = BORDERS_INNER_H | BORDERS_OUTER_H;
const TableFlags BORDERS_V = BORDERS_INNER_V | BORDERS_OUTER_V;
const TableFlags BORDERS_INNER = BORDERS_INNER_V | BORDERS_INNER_H;
const TableFlags BORDERS_OUTER = BORDERS_OUTER_V | BORDERS_OUTER_H;
const TableFlags BORDERS = BORDERS_INNER | BORDERS_OUTER;
const TableFlags NO_BORDERS_IN_BODY = 1 << 11;
const TableFlags NO_BORDERS_IN_BODY_UNTIL_RESIZE = 1 << 12;
const TableFlags SIZING_FIXED_FIT = 1 << 13;
const TableFlags SIZING_FIXED_SAME = 2 << 13;
const TableFlags SIZING_STRETCH_PROP = 3 << 13;
const TableFlags SIZING_STRETCH_SAME = 4 << 13;
const TableFlags NO_HOST_EXTEND_X = 1 << 16;
const TableFlags NO_HOST_EXTEND_Y = 1 << 17;
const TableFlags NO_KEEP_COLUMNS_VISIBLE = 1 << 18;
const TableFlags PRECISE_WIDTHS = 1 << 19;
const TableFlags NO_CLIP = 1 << 20;
const TableFlags PAD_OUTER_X = 1 << 21;
const TableFlags NO_PAD_OUTER_X = 1 << 22;
const TableFlags NO_PAD_INNER_X = 1 << 23;
const TableFlags SCROLL_X = 1 << 24;
const TableFlags SCROLL_Y = 1 << 25;
const TableFlags SORT_MULTI = 1 << 26;
const TableFlags SORT_TRISTATE = 1 << 27;
const TableFlags HIGHLIGHT_HOVERED_COLUMN = 1 << 28;
const TableFlags SIZING_MASK = SIZING_FIXED_FIT | SIZING_FIXED_SAME | SIZING_STRETCH_PROP | SIZING_STRETCH_SAME;

// ImGuiColorEditFlags_
module imgui::color_edit_flags;
distinct ColorEditFlags = uint;
const ColorEditFlags NONE = 0;
const ColorEditFlags NO_ALPHA = 1 << 1;
const ColorEditFlags NO_PICKER = 1 << 2;
const ColorEditFlags NO_OPTIONS = 1 << 3;
const ColorEditFlags NO_SMALL_PREVIEW = 1 << 4;
const ColorEditFlags NO_INPUTS = 1 << 5;
const ColorEditFlags NO_TOOLTIP = 1 << 6;
const ColorEditFlags NO_LABEL = 1 << 7;
const ColorEditFlags NO_SIDE_PREVIEW = 1 << 8;
const ColorEditFlags NO_DRAG_DROP = 1 << 9;
const ColorEditFlags NO_BORDER = 1 << 10;
const ColorEditFlags ALPHA_BAR = 1 << 16;
const ColorEditFlags ALPHA_PREVIEW = 1 << 17;
const ColorEditFlags ALPHA_PREVIEW_HALF = 1 << 18;
const ColorEditFlags HDR = 1 << 19;
const ColorEditFlags DISPLAY_RGB = 1 << 20;
const ColorEditFlags DISPLAY_HSV = 1 << 21;
const ColorEditFlags DISPLAY_HEX = 1 << 22;
const ColorEditFlags UINT8 = 1 << 23;
const ColorEditFlags FLOAT = 1 << 24;
const ColorEditFlags PICKER_HUE_BAR = 1 << 25;
const ColorEditFlags PICKER_HUE_WHEEL = 1 << 26;
const ColorEditFlags INPUT_RGB = 1 << 27;
const ColorEditFlags INPUT_HSV = 1 << 28;
const ColorEditFlags DEFAULT_OPTIONS = UINT8 | DISPLAY_RGB | INPUT_RGB | PICKER_HUE_BAR;
const ColorEditFlags DISPLAY_MASK = DISPLAY_RGB | DISPLAY_HSV | DISPLAY_HEX;
const ColorEditFlags DATA_TYPE_MASK = UINT8 | FLOAT;
const ColorEditFlags PICKER_MASK = PICKER_HUE_WHEEL | PICKER_HUE_BAR;
const ColorEditFlags INPUT_MASK = INPUT_RGB | INPUT_HSV;

// ImGuiDockNodeFlags_
module imgui::dock_node_flags;
distinct DockNodeFlags = uint;
const DockNodeFlags NONE = 0;
const DockNodeFlags KEEP_ALIVE_ONLY = 1 << 0;
const DockNodeFlags NO_DOCKING_OVER_CENTRAL_NODE = 1 << 2;
const DockNodeFlags PASSTHRU_CENTRAL_NODE = 1 << 3;
const DockNodeFlags NO_DOCKING_SPLIT = 1 << 4;
const DockNodeFlags NO_RESIZE = 1 << 5;
const DockNodeFlags AUTO_HIDE_TAB_BAR = 1 << 6;
const DockNodeFlags NO_UNDOCKING = 1 << 7;

// ImGuiHoveredFlags_
module imgui::hovered_flags;
distinct HoveredFlags = uint;
const HoveredFlags NONE = 0;
const HoveredFlags CHILD_WINDOWS = 1 << 0;
const HoveredFlags ROOT_WINDOW = 1 << 1;
const HoveredFlags ANY_WINDOW = 1 << 2;
const HoveredFlags NO_POPUP_HIERARCHY = 1 << 3;
const HoveredFlags DOCK_HIERARCHY = 1 << 4;
const HoveredFlags ALLOW_WHEN_BLOCKED_BY_POPUP = 1 << 5;
const HoveredFlags ALLOW_WHEN_BLOCKED_BY_ACTIVE_ITEM = 1 << 7;
const HoveredFlags ALLOW_WHEN_OVERLAPPED_BY_ITEM = 1 << 8;
const HoveredFlags ALLOW_WHEN_OVERLAPPED_BY_WINDOW = 1 << 9;
const HoveredFlags ALLOW_WHEN_DISABLED = 1 << 10;
const HoveredFlags NO_NAV_OVERRIDE = 1 << 11;
const HoveredFlags ALLOW_WHEN_OVERLAPPED = ALLOW_WHEN_OVERLAPPED_BY_ITEM | ALLOW_WHEN_OVERLAPPED_BY_WINDOW;
const HoveredFlags RECT_ONLY = ALLOW_WHEN_BLOCKED_BY_POPUP | ALLOW_WHEN_BLOCKED_BY_ACTIVE_ITEM | ALLOW_WHEN_OVERLAPPED;
const HoveredFlags ROOT_AND_CHILD_WINDOWS = ROOT_WINDOW | CHILD_WINDOWS;
const HoveredFlags FOR_TOOLTIP = 1 << 12;
const HoveredFlags STATIONARY = 1 << 13;
const HoveredFlags DELAY_NONE = 1 << 14;
const HoveredFlags DELAY_SHORT = 1 << 15;
const HoveredFlags DELAY_NORMAL = 1 << 16;
const HoveredFlags NO_SHARED_DELAY = 1 << 17;

// ImGuiInputFlags_
module imgui::input_flags;
distinct InputFlags = uint;
const InputFlags NONE = 0;
const InputFlags REPEAT = 1 << 0;
const InputFlags ROUTE_ACTIVE = 1 << 10;
const InputFlags ROUTE_FOCUSED = 1 << 11;
const InputFlags ROUTE_GLOBAL = 1 << 12;
const InputFlags ROUTE_ALWAYS = 1 << 13;
const InputFlags ROUTE_OVER_FOCUSED = 1 << 14;
const InputFlags ROUTE_OVER_ACTIVE = 1 << 15;
const InputFlags ROUTE_UNLESS_BG_FOCUSED = 1 << 16;
const InputFlags ROUTE_FROM_ROOT_WINDOW = 1 << 17;
const InputFlags TOOLTIP = 1 << 18;

// ImGuiViewportFlags_
module imgui::viewport_flags;
distinct ViewportFlags = uint;
const ViewportFlags NONE = 0;
const ViewportFlags IS_PLATFORM_WINDOW = 1 << 0;
const ViewportFlags IS_PLATFORM_MONITOR = 1 << 1;
const ViewportFlags OWNED_BY_APP = 1 << 2;
const ViewportFlags NO_DECORATION = 1 << 3;
const ViewportFlags NO_TASK_BAR_ICON = 1 << 4;
const ViewportFlags NO_FOCUS_ON_APPEARING = 1 << 5;
const ViewportFlags NO_FOCUS_ON_CLICK = 1 << 6;
const ViewportFlags NO_INPUTS = 1 << 7;
const ViewportFlags NO_RENDERER_CLEAR = 1 << 8;
const ViewportFlags NO_AUTO_MERGE = 1 << 9;
const ViewportFlags TOP_MOST = 1 << 10;
const ViewportFlags CAN_HOST_OTHER_WINDOWS = 1 << 11;
const ViewportFlags IS_MINIMIZED = 1 << 12;
const ViewportFlags IS_FOCUSED = 1 << 13;

// ImGuiFocusedFlags_
module imgui::focused_flags;
distinct FocusedFlags = uint;
const FocusedFlags NONE = 0;
const FocusedFlags CHILD_WINDOWS = 1 << 0;
const FocusedFlags ROOT_WINDOW = 1 << 1;
const FocusedFlags ANY_WINDOW = 1 << 2;
const FocusedFlags NO_POPUP_HIERARCHY = 1 << 3;
const FocusedFlags DOCK_HIERARCHY = 1 << 4;
const FocusedFlags ROOT_AND_CHILD_WINDOWS = ROOT_WINDOW | CHILD_WINDOWS;

// ImGuiSortDirection
module imgui::sort_direction;
distinct SortDirection = char;
const SortDirection NONE = 0;
const SortDirection ASCENDING = 1;
const SortDirection DESCENDING = 2;

// ImGuiInputTextFlags_
module imgui::input_text_flags;
distinct InputTextFlags = uint;
const InputTextFlags NONE = 0;
const InputTextFlags CHARS_DECIMAL = 1 << 0;
const InputTextFlags CHARS_HEXADECIMAL = 1 << 1;
const InputTextFlags CHARS_SCIENTIFIC = 1 << 2;
const InputTextFlags CHARS_UPPERCASE = 1 << 3;
const InputTextFlags CHARS_NO_BLANK = 1 << 4;
const InputTextFlags ALLOW_TAB_INPUT = 1 << 5;
const InputTextFlags ENTER_RETURNS_TRUE = 1 << 6;
const InputTextFlags ESCAPE_CLEARS_ALL = 1 << 7;
const InputTextFlags CTRL_ENTER_FOR_NEW_LINE = 1 << 8;
const InputTextFlags READ_ONLY = 1 << 9;
const InputTextFlags PASSWORD = 1 << 10;
const InputTextFlags ALWAYS_OVERWRITE = 1 << 11;
const InputTextFlags AUTO_SELECT_ALL = 1 << 12;
const InputTextFlags PARSE_EMPTY_REF_VAL = 1 << 13;
const InputTextFlags DISPLAY_EMPTY_REF_VAL = 1 << 14;
const InputTextFlags NO_HORIZONTAL_SCROLL = 1 << 15;
const InputTextFlags NO_UNDO_REDO = 1 << 16;
const InputTextFlags CALLBACK_COMPLETION = 1 << 17;
const InputTextFlags CALLBACK_HISTORY = 1 << 18;
const InputTextFlags CALLBACK_ALWAYS = 1 << 19;
const InputTextFlags CALLBACK_CHAR_FILTER = 1 << 20;
const InputTextFlags CALLBACK_RESIZE = 1 << 21;
const InputTextFlags CALLBACK_EDIT = 1 << 22;

// ImGuiMouseButton_
module imgui::mouse_button;
distinct MouseButton = uint;
const MouseButton LEFT = 0;
const MouseButton RIGHT = 1;
const MouseButton MIDDLE = 2;
const MouseButton COUNT = 5;

// ImGuiSliderFlags_
module imgui::slider_flags;
distinct SliderFlags = uint;
const SliderFlags NONE = 0;
const SliderFlags ALWAYS_CLAMP = 1 << 4;
const SliderFlags LOGARITHMIC = 1 << 5;
const SliderFlags NO_ROUND_TO_FORMAT = 1 << 6;
const SliderFlags NO_INPUT = 1 << 7;
const SliderFlags WRAP_AROUND = 1 << 8;
const SliderFlags INVALID_MASK = 0x7000000F;

// ImGuiItemFlags_
module imgui::item_flags;
distinct ItemFlags = uint;
const ItemFlags NONE = 0;
const ItemFlags NO_TAB_STOP = 1 << 0;
const ItemFlags NO_NAV = 1 << 1;
const ItemFlags NO_NAV_DEFAULT_FOCUS = 1 << 2;
const ItemFlags BUTTON_REPEAT = 1 << 3;
const ItemFlags AUTO_CLOSE_POPUPS = 1 << 4;

// ImGuiDataType_
module imgui::data_type;
distinct DataType = uint;
const DataType S8 = 0;
const DataType U8 = 1;
const DataType S16 = 2;
const DataType U16 = 3;
const DataType S32 = 4;
const DataType U32 = 5;
const DataType S64 = 6;
const DataType U64 = 7;
const DataType FLOAT = 8;
const DataType DOUBLE = 9;
const DataType BOOL = 10;
const DataType COUNT = 11;

// ImGuiTreeNodeFlags_
module imgui::tree_node_flags;
distinct TreeNodeFlags = uint;
const TreeNodeFlags NONE = 0;
const TreeNodeFlags SELECTED = 1 << 0;
const TreeNodeFlags FRAMED = 1 << 1;
const TreeNodeFlags ALLOW_OVERLAP = 1 << 2;
const TreeNodeFlags NO_TREE_PUSH_ON_OPEN = 1 << 3;
const TreeNodeFlags NO_AUTO_OPEN_ON_LOG = 1 << 4;
const TreeNodeFlags DEFAULT_OPEN = 1 << 5;
const TreeNodeFlags OPEN_ON_DOUBLE_CLICK = 1 << 6;
const TreeNodeFlags OPEN_ON_ARROW = 1 << 7;
const TreeNodeFlags LEAF = 1 << 8;
const TreeNodeFlags BULLET = 1 << 9;
const TreeNodeFlags FRAME_PADDING = 1 << 10;
const TreeNodeFlags SPAN_AVAIL_WIDTH = 1 << 11;
const TreeNodeFlags SPAN_FULL_WIDTH = 1 << 12;
const TreeNodeFlags SPAN_TEXT_WIDTH = 1 << 13;
const TreeNodeFlags SPAN_ALL_COLUMNS = 1 << 14;
const TreeNodeFlags NAV_LEFT_JUMPS_BACK_HERE = 1 << 15;
const TreeNodeFlags COLLAPSING_HEADER = FRAMED | NO_TREE_PUSH_ON_OPEN | NO_AUTO_OPEN_ON_LOG;

// ImGuiTableBgTarget_
module imgui::table_bg_target;
distinct TableBgTarget = uint;
const TableBgTarget NONE = 0;
const TableBgTarget ROW_BG0 = 1;
const TableBgTarget ROW_BG1 = 2;
const TableBgTarget CELL_BG = 3;

// ImGuiConfigFlags_
module imgui::config_flags;
distinct ConfigFlags = uint;
const ConfigFlags NONE = 0;
const ConfigFlags NAV_ENABLE_KEYBOARD = 1 << 0;
const ConfigFlags NAV_ENABLE_GAMEPAD = 1 << 1;
const ConfigFlags NAV_ENABLE_SET_MOUSE_POS = 1 << 2;
const ConfigFlags NAV_NO_CAPTURE_KEYBOARD = 1 << 3;
const ConfigFlags NO_MOUSE = 1 << 4;
const ConfigFlags NO_MOUSE_CURSOR_CHANGE = 1 << 5;
const ConfigFlags NO_KEYBOARD = 1 << 6;
const ConfigFlags DOCKING_ENABLE = 1 << 7;
const ConfigFlags VIEWPORTS_ENABLE = 1 << 10;
const ConfigFlags DPI_ENABLE_SCALE_VIEWPORTS = 1 << 14;
const ConfigFlags DPI_ENABLE_SCALE_FONTS = 1 << 15;
const ConfigFlags IS_SRGB = 1 << 20;
const ConfigFlags IS_TOUCH_SCREEN = 1 << 21;

// ImGuiCol_
module imgui::col;
distinct Col = uint;
const Col TEXT = 0;
const Col TEXT_DISABLED = 1;
const Col WINDOW_BG = 2;
const Col CHILD_BG = 3;
const Col POPUP_BG = 4;
const Col BORDER = 5;
const Col BORDER_SHADOW = 6;
const Col FRAME_BG = 7;
const Col FRAME_BG_HOVERED = 8;
const Col FRAME_BG_ACTIVE = 9;
const Col TITLE_BG = 10;
const Col TITLE_BG_ACTIVE = 11;
const Col TITLE_BG_COLLAPSED = 12;
const Col MENU_BAR_BG = 13;
const Col SCROLLBAR_BG = 14;
const Col SCROLLBAR_GRAB = 15;
const Col SCROLLBAR_GRAB_HOVERED = 16;
const Col SCROLLBAR_GRAB_ACTIVE = 17;
const Col CHECK_MARK = 18;
const Col SLIDER_GRAB = 19;
const Col SLIDER_GRAB_ACTIVE = 20;
const Col BUTTON = 21;
const Col BUTTON_HOVERED = 22;
const Col BUTTON_ACTIVE = 23;
const Col HEADER = 24;
const Col HEADER_HOVERED = 25;
const Col HEADER_ACTIVE = 26;
const Col SEPARATOR = 27;
const Col SEPARATOR_HOVERED = 28;
const Col SEPARATOR_ACTIVE = 29;
const Col RESIZE_GRIP = 30;
const Col RESIZE_GRIP_HOVERED = 31;
const Col RESIZE_GRIP_ACTIVE = 32;
const Col TAB_HOVERED = 33;
const Col TAB = 34;
const Col TAB_SELECTED = 35;
const Col TAB_SELECTED_OVERLINE = 36;
const Col TAB_DIMMED = 37;
const Col TAB_DIMMED_SELECTED = 38;
const Col TAB_DIMMED_SELECTED_OVERLINE = 39;
const Col DOCKING_PREVIEW = 40;
const Col DOCKING_EMPTY_BG = 41;
const Col PLOT_LINES = 42;
const Col PLOT_LINES_HOVERED = 43;
const Col PLOT_HISTOGRAM = 44;
const Col PLOT_HISTOGRAM_HOVERED = 45;
const Col TABLE_HEADER_BG = 46;
const Col TABLE_BORDER_STRONG = 47;
const Col TABLE_BORDER_LIGHT = 48;
const Col TABLE_ROW_BG = 49;
const Col TABLE_ROW_BG_ALT = 50;
const Col TEXT_LINK = 51;
const Col TEXT_SELECTED_BG = 52;
const Col DRAG_DROP_TARGET = 53;
const Col NAV_HIGHLIGHT = 54;
const Col NAV_WINDOWING_HIGHLIGHT = 55;
const Col NAV_WINDOWING_DIM_BG = 56;
const Col MODAL_WINDOW_DIM_BG = 57;
const Col COUNT = 58;

// ImGuiKey
module imgui::key;
distinct Key = int;
const Key NONE = 0;
const Key TAB = 512;
const Key LEFT_ARROW = 513;
const Key RIGHT_ARROW = 514;
const Key UP_ARROW = 515;
const Key DOWN_ARROW = 516;
const Key PAGE_UP = 517;
const Key PAGE_DOWN = 518;
const Key HOME = 519;
const Key END = 520;
const Key INSERT = 521;
const Key DELETE = 522;
const Key BACKSPACE = 523;
const Key SPACE = 524;
const Key ENTER = 525;
const Key ESCAPE = 526;
const Key LEFT_CTRL = 527;
const Key LEFT_SHIFT = 528;
const Key LEFT_ALT = 529;
const Key LEFT_SUPER = 530;
const Key RIGHT_CTRL = 531;
const Key RIGHT_SHIFT = 532;
const Key RIGHT_ALT = 533;
const Key RIGHT_SUPER = 534;
const Key MENU = 535;
const Key KEY_0 = 536;
const Key KEY_1 = 537;
const Key KEY_2 = 538;
const Key KEY_3 = 539;
const Key KEY_4 = 540;
const Key KEY_5 = 541;
const Key KEY_6 = 542;
const Key KEY_7 = 543;
const Key KEY_8 = 544;
const Key KEY_9 = 545;
const Key A = 546;
const Key B = 547;
const Key C = 548;
const Key D = 549;
const Key E = 550;
const Key F = 551;
const Key G = 552;
const Key H = 553;
const Key I = 554;
const Key J = 555;
const Key K = 556;
const Key L = 557;
const Key M = 558;
const Key N = 559;
const Key O = 560;
const Key P = 561;
const Key Q = 562;
const Key R = 563;
const Key S = 564;
const Key T = 565;
const Key U = 566;
const Key V = 567;
const Key W = 568;
const Key X = 569;
const Key Y = 570;
const Key Z = 571;
const Key F1 = 572;
const Key F2 = 573;
const Key F3 = 574;
const Key F4 = 575;
const Key F5 = 576;
const Key F6 = 577;
const Key F7 = 578;
const Key F8 = 579;
const Key F9 = 580;
const Key F10 = 581;
const Key F11 = 582;
const Key F12 = 583;
const Key F13 = 584;
const Key F14 = 585;
const Key F15 = 586;
const Key F16 = 587;
const Key F17 = 588;
const Key F18 = 589;
const Key F19 = 590;
const Key F20 = 591;
const Key F21 = 592;
const Key F22 = 593;
const Key F23 = 594;
const Key F24 = 595;
const Key APOSTROPHE = 596;
const Key COMMA = 597;
const Key MINUS = 598;
const Key PERIOD = 599;
const Key SLASH = 600;
const Key SEMICOLON = 601;
const Key EQUAL = 602;
const Key LEFT_BRACKET = 603;
const Key BACKSLASH = 604;
const Key RIGHT_BRACKET = 605;
const Key GRAVE_ACCENT = 606;
const Key CAPS_LOCK = 607;
const Key SCROLL_LOCK = 608;
const Key NUM_LOCK = 609;
const Key PRINT_SCREEN = 610;
const Key PAUSE = 611;
const Key KEYPAD0 = 612;
const Key KEYPAD1 = 613;
const Key KEYPAD2 = 614;
const Key KEYPAD3 = 615;
const Key KEYPAD4 = 616;
const Key KEYPAD5 = 617;
const Key KEYPAD6 = 618;
const Key KEYPAD7 = 619;
const Key KEYPAD8 = 620;
const Key KEYPAD9 = 621;
const Key KEYPAD_DECIMAL = 622;
const Key KEYPAD_DIVIDE = 623;
const Key KEYPAD_MULTIPLY = 624;
const Key KEYPAD_SUBTRACT = 625;
const Key KEYPAD_ADD = 626;
const Key KEYPAD_ENTER = 627;
const Key KEYPAD_EQUAL = 628;
const Key APP_BACK = 629;
const Key APP_FORWARD = 630;
const Key GAMEPAD_START = 631;
const Key GAMEPAD_BACK = 632;
const Key GAMEPAD_FACE_LEFT = 633;
const Key GAMEPAD_FACE_RIGHT = 634;
const Key GAMEPAD_FACE_UP = 635;
const Key GAMEPAD_FACE_DOWN = 636;
const Key GAMEPAD_DPAD_LEFT = 637;
const Key GAMEPAD_DPAD_RIGHT = 638;
const Key GAMEPAD_DPAD_UP = 639;
const Key GAMEPAD_DPAD_DOWN = 640;
const Key GAMEPAD_L1 = 641;
const Key GAMEPAD_R1 = 642;
const Key GAMEPAD_L2 = 643;
const Key GAMEPAD_R2 = 644;
const Key GAMEPAD_L3 = 645;
const Key GAMEPAD_R3 = 646;
const Key GAMEPAD_LS_TICK_LEFT = 647;
const Key GAMEPAD_LS_TICK_RIGHT = 648;
const Key GAMEPAD_LS_TICK_UP = 649;
const Key GAMEPAD_LS_TICK_DOWN = 650;
const Key GAMEPAD_RS_TICK_LEFT = 651;
const Key GAMEPAD_RS_TICK_RIGHT = 652;
const Key GAMEPAD_RS_TICK_UP = 653;
const Key GAMEPAD_RS_TICK_DOWN = 654;
const Key MOUSE_LEFT = 655;
const Key MOUSE_RIGHT = 656;
const Key MOUSE_MIDDLE = 657;
const Key MOUSE_X1 = 658;
const Key MOUSE_X2 = 659;
const Key MOUSE_WHEEL_X = 660;
const Key MOUSE_WHEEL_Y = 661;
const Key RESERVED_FOR_MOD_CTRL = 662;
const Key RESERVED_FOR_MOD_SHIFT = 663;
const Key RESERVED_FOR_MOD_ALT = 664;
const Key RESERVED_FOR_MOD_SUPER = 665;
const Key COUNT = 666;
const Key MOD_NONE = 0;
const Key MOD_CTRL = 1 << 12;
const Key MOD_SHIFT = 1 << 13;
const Key MOD_ALT = 1 << 14;
const Key MOD_SUPER = 1 << 15;
const Key MOD_MASK = 0xF000;
const Key NAMED_KEY_BEGIN = 512;
const Key NAMED_KEY_END = COUNT;
const Key NAMED_KEY_COUNT = 154;
const Key KEYS_DATA_SIZE = NAMED_KEY_COUNT;
const Key KEYS_DATA_OFFSET = NAMED_KEY_BEGIN;

// ImGuiWindowFlags_
module imgui::window_flags;
distinct WindowFlags = uint;
const WindowFlags NONE = 0;
const WindowFlags NO_TITLE_BAR = 1 << 0;
const WindowFlags NO_RESIZE = 1 << 1;
const WindowFlags NO_MOVE = 1 << 2;
const WindowFlags NO_SCROLLBAR = 1 << 3;
const WindowFlags NO_SCROLL_WITH_MOUSE = 1 << 4;
const WindowFlags NO_COLLAPSE = 1 << 5;
const WindowFlags ALWAYS_AUTO_RESIZE = 1 << 6;
const WindowFlags NO_BACKGROUND = 1 << 7;
const WindowFlags NO_SAVED_SETTINGS = 1 << 8;
const WindowFlags NO_MOUSE_INPUTS = 1 << 9;
const WindowFlags MENU_BAR = 1 << 10;
const WindowFlags HORIZONTAL_SCROLLBAR = 1 << 11;
const WindowFlags NO_FOCUS_ON_APPEARING = 1 << 12;
const WindowFlags NO_BRING_TO_FRONT_ON_FOCUS = 1 << 13;
const WindowFlags ALWAYS_VERTICAL_SCROLLBAR = 1 << 14;
const WindowFlags ALWAYS_HORIZONTAL_SCROLLBAR = 1<< 15;
const WindowFlags NO_NAV_INPUTS = 1 << 16;
const WindowFlags NO_NAV_FOCUS = 1 << 17;
const WindowFlags UNSAVED_DOCUMENT = 1 << 18;
const WindowFlags NO_DOCKING = 1 << 19;
const WindowFlags NO_NAV = NO_NAV_INPUTS | NO_NAV_FOCUS;
const WindowFlags NO_DECORATION = NO_TITLE_BAR | NO_RESIZE | NO_SCROLLBAR | NO_COLLAPSE;
const WindowFlags NO_INPUTS = NO_MOUSE_INPUTS | NO_NAV_INPUTS | NO_NAV_FOCUS;
const WindowFlags CHILD_WINDOW = 1 << 24;
const WindowFlags TOOLTIP = 1 << 25;
const WindowFlags POPUP = 1 << 26;
const WindowFlags MODAL = 1 << 27;
const WindowFlags CHILD_MENU = 1 << 28;
const WindowFlags DOCK_NODE_HOST = 1 << 29;

// ImGuiMouseCursor_
module imgui::mouse_cursor;
distinct MouseCursor = int;
const MouseCursor NONE = -1;
const MouseCursor ARROW = 0;
const MouseCursor TEXT_INPUT = 1;
const MouseCursor RESIZE_ALL = 2;
const MouseCursor RESIZE_NS = 3;
const MouseCursor RESIZE_EW = 4;
const MouseCursor RESIZE_NESW = 5;
const MouseCursor RESIZE_NWSE = 6;
const MouseCursor HAND = 7;
const MouseCursor NOT_ALLOWED = 8;
const MouseCursor COUNT = 9;

// ImGuiComboFlags_
module imgui::combo_flags;
distinct ComboFlags = uint;
const ComboFlags NONE = 0;
const ComboFlags POPUP_ALIGN_LEFT = 1 << 0;
const ComboFlags HEIGHT_SMALL = 1 << 1;
const ComboFlags HEIGHT_REGULAR = 1 << 2;
const ComboFlags HEIGHT_LARGE = 1 << 3;
const ComboFlags HEIGHT_LARGEST = 1 << 4;
const ComboFlags NO_ARROW_BUTTON = 1 << 5;
const ComboFlags NO_PREVIEW = 1 << 6;
const ComboFlags WIDTH_FIT_PREVIEW = 1 << 7;
const ComboFlags HEIGHT_MASK = HEIGHT_SMALL | HEIGHT_REGULAR | HEIGHT_LARGE | HEIGHT_LARGEST;

// ImDrawListFlags_
module imgui::draw_list_flags;
distinct DrawListFlags = uint;
const DrawListFlags NONE = 0;
const DrawListFlags ANTI_ALIASED_LINES = 1 << 0;
const DrawListFlags ANTI_ALIASED_LINES_USE_TEX = 1 << 1;
const DrawListFlags ANTI_ALIASED_FILL = 1 << 2;
const DrawListFlags ALLOW_VTX_OFFSET = 1 << 3;

// ImGuiMouseSource
module imgui::mouse_source;
distinct MouseSource = int;
const MouseSource MOUSE = 0;
const MouseSource TOUCH_SCREEN = 1;
const MouseSource PEN = 2;
const MouseSource COUNT = 3;

// ImGuiTabItemFlags_
module imgui::tab_item_flags;
distinct TabItemFlags = uint;
const TabItemFlags NONE = 0;
const TabItemFlags UNSAVED_DOCUMENT = 1 << 0;
const TabItemFlags SET_SELECTED = 1 << 1;
const TabItemFlags NO_CLOSE_WITH_MIDDLE_MOUSE_BUTTON = 1 << 2;
const TabItemFlags NO_PUSH_ID = 1 << 3;
const TabItemFlags NO_TOOLTIP = 1 << 4;
const TabItemFlags NO_REORDER = 1 << 5;
const TabItemFlags LEADING = 1 << 6;
const TabItemFlags TRAILING = 1 << 7;
const TabItemFlags NO_ASSUMED_CLOSURE = 1 << 8;

